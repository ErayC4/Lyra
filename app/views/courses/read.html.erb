
<style>
  :root {
    /* Farbvariablen */
    --primary-color: #00ff99;
    --dark-color: #000000;
    --white-color: #ffffff;
    --light-gray: #e6e4e4;
    --medium-gray: #c9c9c9;
    --dark-gray: #444343;
    --footer-bg: rgb(32, 31, 36);
    --footer-copyright-bg: rgb(19, 19, 19);
    
    /* Abstands-System */
    --space-xs: 4px;
    --space-sm: 8px;
    --space-md: 16px;
    --space-lg: 24px;
    --space-xl: 32px;
    --space-xxl: 48px;
    --space-3xl: 64px;
    
    /* Größen-System */
    --button-height: 48px;
    --card-border: 4px;
    --image-border: 12px;

    /* Font Größen*/
    --font-sm: 1rem;
    --font-md: 1.5rem;
    --font-xl: 2rem;
  }
  body {
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  }
  
  .note-container{
    padding: 0 25%;
  }
  .question-element{
    background-color: #DBDBDB;
    padding: 20px;
    border: 1px solid black; 
  }

  h1 {
      color: #2c3e50;
      text-align: center;
      margin-bottom: 30px;
  }
  .question-container {
      background-color: white;
      border-radius: 8px;
      box-shadow: 0 2px 5px rgba(0,0,0,0.1);
      padding: 20px;
      margin-bottom: 25px;
  }
  .question-title {
      font-weight: bold;
      margin-bottom: 15px;
      color: #2c3e50;
  }
  .question-text {
      margin-bottom: 15px;
      line-height: 1.5;
  }
  .options-container {
      margin-left: 10px;
      margin-bottom: 16px;
  }
  .option {
      margin-bottom: 10px;
      display: flex;
      align-items: center;
  }
  .option input {
      margin-right: 10px;
  }
  .option label {
      cursor: pointer;
  }
  .submit-btn {
      background-color: #3498db;
      color: white;
      border: none;
      padding: 12px 24px;
      font-size: 16px;
      border-radius: 4px;
      cursor: pointer;
      display: block;
      margin: 30px auto 0;
      transition: background-color 0.3s;
  }
  .submit-btn:hover {
      background-color: #2980b9;
  }
  .question-type {
      font-size: 0.8em;
      color: #7f8c8d;
      margin-bottom: 5px;
  }
  .latest-button-container {
  display: flex;
  width: 25%;
  align-items: center;
  height: var(--button-height);
  cursor: pointer;
}

.latest-button {
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: var(--primary-color);
  color: var(--dark-color);
  text-decoration: none;
  border: none;
  width: 100%;
  height: 100%;
  transition: .3s;
}

.arrow {
  width: 20px;
  height: 20px;
  fill: var(--white-color);
}

.arrow-container {
  background-color: var(--dark-color);
  width: 30px;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  transition: 0.3s ease;

}

.latest-button-container:hover .latest-button {
  background-color: var(--dark-color);
  color: var(--white-color);
}

.latest-button-container:hover .arrow {
  fill: var(--dark-color);
  stroke: var(--dark-color);
}

.latest-button-container:hover .arrow-container {
  background-color: var(--primary-color);
}

.latest-button-container:active {
  box-shadow: 0 2px 10px 0 rgba(0, 0, 0, .5);
}
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    try {
      // Get the note content from a data attribute that we'll create in the HTML
      const noteContent = document.getElementById('note-content-data').textContent;
      const noteData = JSON.parse(noteContent);
      

      
      // Function to render the note content
      function renderNote(data) {
        const contentElement = document.getElementById('note-content');
        const timestampElement = document.getElementById('note-timestamp');
      

        // Render blocks
        data.blocks.forEach(block => {
          const blockElement = renderBlock(block);
          if (blockElement) {
            contentElement.appendChild(blockElement);
          }
        });
      }
      
      // Function to render individual blocks
      function renderBlock(block) {
        switch(block.type) {
          case 'header':
            const header = document.createElement(`h${block.data.level}`);
            header.innerHTML = block.data.text;
            return header;
            
          case 'paragraph':
            const paragraph = document.createElement('p');
            paragraph.innerHTML = block.data.text;
            return paragraph;
            
          case 'alert':
            const alert = document.createElement('div');
            alert.className = `alert alert-${block.data.type}`;
            alert.textContent = block.data.message;
            return alert;
            
          case 'list':
            if (block.data.style === 'checklist') {
              const list = document.createElement('ul');
              list.className = 'checklist';
              
              block.data.items.forEach(item => {
                const listItem = document.createElement('li');
                listItem.className = 'checklist-item';
                
                const checkbox = document.createElement('input');
                checkbox.type = 'checkbox';
                checkbox.checked = item.meta.checked;
                checkbox.disabled = true;
                
                const label = document.createElement('span');
                label.innerHTML = item.content;
                
                listItem.appendChild(checkbox);
                listItem.appendChild(label);
                list.appendChild(listItem);
              });
              
              return list;
            } else {
              const list = document.createElement(block.data.style === 'ordered' ? 'ol' : 'ul');
              
              block.data.items.forEach(item => {
                const listItem = document.createElement('li');
                listItem.innerHTML = item.content;
                list.appendChild(listItem);
              });
              
              return list;
            }
            
          case 'table':
            const table = document.createElement('table');
            
            block.data.content.forEach((row, rowIndex) => {
              const tr = document.createElement('tr');
              
              row.forEach((cell, cellIndex) => {
                const cellElement = document.createElement(
                  block.data.withHeadings && rowIndex === 0 ? 'th' : 'td'
                );
                cellElement.textContent = cell;
                tr.appendChild(cellElement);
              });
              
              table.appendChild(tr);
            });
            
            return table;
            
          default:
            console.warn(`Unsupported block type: ${block.type}`);
            return null;
        }
      }
      
      // Initialize with the data
      renderNote(noteData);
    } catch (error) {
      console.error("Error processing note data:", error);
      document.getElementById('note-content').innerHTML = '<p>Error loading note content. Please try again later.</p>';
    }
  });
</script>
<div id="note-content-data" style="display: none;">
  <%= @course.note.content.to_json.html_safe %>
</div>

<div class="note-container">
  <div id="note-content"></div>
  <div class="question-container">
        <div class="question-type">Single-Choice</div>
        <div class="question-title">Frage 1</div>
        <div class="question-text">Welches Betriebssystem nutzen Sie hauptsächlich?</div>
        <div class="options-container">
            <div class="option">
                <input type="radio" id="q1-opt1" name="question1" value="windows">
                <label for="q1-opt1">Windows</label>
            </div>
            <div class="option">
                <input type="radio" id="q1-opt2" name="question1" value="macos">
                <label for="q1-opt2">macOS</label>
            </div>
            <div class="option">
                <input type="radio" id="q1-opt3" name="question1" value="linux">
                <label for="q1-opt3">Linux</label>
            </div>
            <div class="option">
                <input type="radio" id="q1-opt4" name="question1" value="other">
                <label for="q1-opt4">Anderes</label>
            </div>
        </div>
        <div class="latest-button-container">
          <div class="latest-button">SHOW ANSWER</div>
          <div class="arrow-container">
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="white" stroke="white" class="arrow" viewBox="0 0 16 16">
                <path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708"/>
              </svg>                
          </div>
        </div>
    </div>
    
    <!-- Beispiel für eine Multiple-Choice-Frage -->
    <div class="question-container">
        <div class="question-type">Multiple-Choice</div>
        <div class="question-title">Frage 2</div>
        <div class="question-text">Welche der folgenden Programmiersprachen haben Sie bereits benutzt? (Mehrere Antworten möglich)</div>
        <div class="options-container">
            <div class="option">
                <input type="checkbox" id="q2-opt1" name="question2" value="java">
                <label for="q2-opt1">Java</label>
            </div>
            <div class="option">
                <input type="checkbox" id="q2-opt2" name="question2" value="python">
                <label for="q2-opt2">Python</label>
            </div>
            <div class="option">
                <input type="checkbox" id="q2-opt3" name="question2" value="javascript">
                <label for="q2-opt3">JavaScript</label>
            </div>
            <div class="option">
                <input type="checkbox" id="q2-opt4" name="question2" value="csharp">
                <label for="q2-opt4">C#</label>
            </div>
            <div class="option">
                <input type="checkbox" id="q2-opt5" name="question2" value="cpp">
                <label for="q2-opt5">C++</label>
            </div>
        </div>
        <div class="latest-button-container">
          <div class="latest-button">SHOW ANSWER</div>
          <div class="arrow-container">
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="white" stroke="white" class="arrow" viewBox="0 0 16 16">
                <path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708"/>
              </svg>                
          </div>
        </div>
    </div>
    
    <!-- Beispiel für eine weitere Single-Choice-Frage -->
    <div class="question-container">
        <div class="question-type">Single-Choice</div>
        <div class="question-title">Frage 3</div>
        <div class="question-text">Wie viel Erfahrung haben Sie mit HTML und CSS?</div>
        <div class="options-container">
            <div class="option">
                <input type="radio" id="q3-opt1" name="question3" value="beginner">
                <label for="q3-opt1">Anfänger</label>
            </div>
            <div class="option">
                <input type="radio" id="q3-opt2" name="question3" value="intermediate">
                <label for="q3-opt2">Fortgeschritten</label>
            </div>
            <div class="option">
                <input type="radio" id="q3-opt3" name="question3" value="expert">
                <label for="q3-opt3">Experte</label>
            </div>
            <div class="option">
                <input type="radio" id="q3-opt4" name="question3" value="none">
                <label for="q3-opt4">Keine Erfahrung</label>
            </div>
        </div>
        <div class="latest-button-container">
          <div class="latest-button">SHOW ANSWER</div>
          <div class="arrow-container">
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="white" stroke="white" class="arrow" viewBox="0 0 16 16">
                <path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708"/>
              </svg>                
          </div>
        </div>
    </div>
</div>

